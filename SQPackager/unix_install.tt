#!/bin/sh
#=SQPACKAGER %%SQPACKAGER_VERSION%%
#This is a generated file by SQPackager
#Remove the =SQPACKAGER line for sqpackager to not regenerate this file
#set -o xtrace
PREFIX="/usr/local/"
COMPILE_PREFIX=""
PROJECT_BUILD_DIR="project_build_dir"
DO_BUILD=0
QMAKE_EXEC=%%DEFAULT_QMAKE_EXEC%%
DO_INSTALL=0
SKIP_MAKE=0

## Arugment handling
if [ "$1" = "--help" ]; then
    echo "Arguments are [--build] [--install] [--qmake-cmd <qmake>] [--prefix install_prefix] QMAKE_ARGS"
    echo "Note that --build or --install must be used before --prefix"
fi

set_prefix=0
set_qmake=0
set_compile_prefix=0
for arg in "$@"
do
    if [ "$set_prefix" = 1 ]; then
        PREFIX=$arg
        set_prefix=0
        shift 1
        break
    fi
    if [ "$set_qmake" = 1 ]; then
        QMAKE_EXEC=$arg
        set_qmake=0
    fi
    if [ "$set_compile_prefix" = 1 ]; then
        COMPILE_PREFIX=$arg
        set_compile_prefix=0
    fi
    if [ "$arg" = "--prefix" ]; then
        set_prefix=1
    fi
    if [ "$arg" = "--build" ]; then
        DO_BUILD=1
    fi
    if [ "$arg" = "--install" ]; then
        DO_INSTALL=1
    fi
    if [ "$arg" = "--skip-make" ]; then
        SKIP_MAKE=1
    fi
    if [ "$arg" = "--qmake-cmd" ]; then
        set_qmake=1
    fi
    if [ "$arg" = "--compile-prefix" ]; then
        set_compile_prefix=1
    fi
    shift 1
done
if [ "$set_prefix" = 1 ]; then
    echo "--prefix with no argument"
    exit 1
fi
if [ "$PREFIX" = "--build" ]; then
    echo "--prefix missing a value"
    exit 1
fi
if [ "$PREFIX" = "--install" ]; then
    echo "--prefix missing a value"
    exit 1
fi

if [ $DO_BUILD = 0 -a $DO_INSTALL = 0 ]; then
    DO_BUILD=1
    DO_INSTALL=1
fi

PROJECT_TARGET=%%PROJECT_TARGET%%

INSTALL_PREFIX=$PREFIX
if [ "$COMPILE_PREFIX" = "" ]; then
    COMPILE_PREFIX=$INSTALL_PREFIX
fi

DESKTOP_FILE="%%DESKTOP_FILE%%"
NORMALIZED_DESKTOP_FILE_NAME="%%NORMALIZED_DESKTOP_FILE_NAME%%"
APPLICATION_NAME="%%APPLICATION_NAME%%"
APPLICATION_SHARE="$INSTALL_PREFIX/share/$APPLICATION_NAME"
APPLICATION_COMPILE_SHARE="$COMPILE_PREFIX/share/$APPLICATION_NAME"
TRANSLATION_DIR="$APPLICATION_SHARE/i18n/"


if [ $DO_BUILD = 1 ]; then
    echo "Building project into : $PROJECT_BUILD_DIR"
    mkdir -v $PROJECT_BUILD_DIR
    cd $PROJECT_BUILD_DIR
    #echo DEFINES+="%%DEFINE_INSTALLED%%" DEFINES+="%%DEFINE_INSTALL_PREFIX%%=$COMPILE_PREFIX" DEFINES+="%%DEFINE_APP_SHARE%%=$APPLICATION_COMPILE_SHARE" $@
    $QMAKE_EXEC -makefile DEFINES+="%%DEFINE_INSTALLED%%" DEFINES+="%%DEFINE_INSTALL_PREFIX%%=\"$COMPILE_PREFIX\"" DEFINES+="%%DEFINE_APP_SHARE%%=\"$APPLICATION_COMPILE_SHARE\"" $@
    if [ $SKIP_MAKE = 0 ]; then
        make -j 4
    fi
    cd -
fi

if [ $DO_INSTALL = 0 ]; then
    exit 0
fi
echo "Starting installation"

echo "Installing target binary"

install -v -D $PROJECT_BUILD_DIR/$PROJECT_TARGET $INSTALL_PREFIX/bin/$PROJECT_TARGET

echo "Installing .desktop file"

install -v -d $INSTALL_PREFIX/share/applications/
install -v -Dm644 $DESKTOP_FILE $INSTALL_PREFIX/share/applications/$NORMALIZED_DESKTOP_FILE_NAME
install -v -D "%%PROJECT_ICON_FILE%%" $INSTALL_PREFIX/share/icons/hicolor/%%ICON_SIZE%%/apps/%%NORMALIZED_PROJECT_ICON_PATH%%

%%{IF HAS_TRANSLATIONS%%
echo "Installing translations files"
echo %%TRANSLATION_DIR%%
cd %%TRANSLATION_DIR%%
for TRANSLATION_FILE in *.qm;
do
install -v -D -m 644 $PWD/$TRANSLATION_FILE $TRANSLATION_DIR/$TRANSLATION_FILE;
done
cd -
%%}IF%%

%%{IF HAS_README%%
echo "Installing Readme file"
install -v -D %%README%% $INSTALL_PREFIX/share/doc/$APPLICATION_NAME/%%README%%
%%}IF%%

if [ -e "$PROJECT_TARGET.manpage.1" ]; then
    install -v -d $INSTALL_PREFIX/share/man/man1/
    gzip -c "$PROJECT_TARGET.manpage.1" > $INSTALL_PREFIX/share/man/man1/"$PROJECT_TARGET.1.gz"
fi

%%{IF HAS_RELEASE_FILES%%
install_directory() {
    cd "$1"
    find . -type f -exec install -v -m644 -D "{}" "$APPLICATION_SHARE/$2/{}" \;
    cd -
}
install_file() {
    install -v -m $3 -D "$1" "$APPLICATION_SHARE/$2"
}
%%RELEASE_FILES_STRING%%
%%}IF%%

